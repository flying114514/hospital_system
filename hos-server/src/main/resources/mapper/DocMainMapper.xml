<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hui.mapper.DocMainMapper">
    <insert id="register" useGeneratedKeys="true" keyProperty="doctorId" keyColumn="id">
        insert into basic_doctor (name, id_card, password)
        values (#{name}, #{idCard}, #{password})
    </insert>
    <insert id="addBasicInfo" useGeneratedKeys="true" keyProperty="id">
        insert into doctor_details (name)
        values (#{name})
    </insert>
    <update id="insertDocId">
        update doctor_details
        set doctor_id = #{doctorId}
        where id = #{id}
    </update>
    <update id="updatePassword">
        update basic_doctor
        set password = #{password}
        where name = #{name}
          and id_card = #{idCard}
    </update>
    <update id="setDetailInfo">
        update doctor_details
        set department_location = #{departmentLocation},
            department          = #{department},
            profile             = #{profile},
            level               = #{level},
            work_experience     = #{workExperience}
        where doctor_id = #{doctorId}
    </update>
    <update id="setPriceByLevel">
        update doctor_details
        set price = #{price}
        where doctor_id = #{doctorId}
    </update>
    <update id="changeStatus">
        update orders
        set status=2
        where status = 8
          and number = #{number}
    </update>
    <delete id="deleteSchedulesBefore">
        delete
        from work_time
        where doctor_id = #{doctorId}
          and begin_time &lt;= #{expiredDate}
    </delete>
    <insert id="setInfo" useGeneratedKeys="true" keyColumn="work_id" keyProperty="workId">
        insert into work_time (name, doctor_id, begin_time, end_time, predict_time, remain)
        values (#{name}, #{doctorId}, #{beginTime}, #{endTime}, #{predictTime}, #{remain})
    </insert>
    <insert id="batchSetBanInfo">
        insert into time_details (name, doctor_id, begin_time, end_time, predict_time,work_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name}, #{item.doctorId}, #{item.beginTime}, #{item.endTime}, #{item.predictTime}, #{item.workId})
        </foreach>
    </insert>
    <insert id="insertCases">
        insert into cases (patient_id, patient_name, doctor_name, doctor_id, cases, create_time)
        values (#{patientId}, #{patientName}, #{doctorName}, #{doctorId}, #{cases}, #{createTime})
    </insert>

    <select id="getByIdCard" resultType="com.hui.vo.DocLoginVO">
        select id, name, id_card, password
        from basic_doctor
        where id_card = #{idCard}
    </select>
    <select id="checkDoc" resultType="com.hui.entity.DocBasic">
        select id, name, id_card
        from basic_doctor
        where name = #{name}
          and id_card = #{idCard}
    </select>
    <select id="getDetailInfo" resultType="com.hui.entity.DetailInfo">
        select department_location, name, department, profile, level, work_experience
        from doctor_details
        where doctor_id = #{doctorId}
    </select>
    <select id="getBanInfo" resultType="com.hui.vo.BanInfoVO">
        select begin_time, end_time, predict_time
        from work_time
        where doctor_id = #{doctorId}
          and begin_time &lt;= #{endTime}
          and end_time &gt;= #{beginTime}
    </select>
    <select id="getCases" resultType="com.hui.entity.Cases">
        select patient_name, patient_id, doctor_name, doctor_id
        from orders
        where number = #{number}
          and status = 2
    </select>
    <select id="checkCases" resultType="java.lang.String">
        select patient_name
        from orders
        where status = 8
          and number = #{number}
    </select>

</mapper>